pipeline {
    agent { label 'slave' } // Replace 'slave' with the appropriate label for your agent

    tools {
        maven 'M3' // Ensure that 'M3' is the correct name for your Maven installation in Jenkins
    }

    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main', changelog: false, poll: false, url: 'https://github.com/saeedhmohd244/kubernetics-project.git'
            }
        }

        stage('Build Artifact') {
            steps {
                sh '''
                java -version
                cd spring-boot-app/
                mvn clean install
                '''
            }
        }

        stage('Sonar Analysis') {
            steps {
                withSonarQubeEnv('sonar-scanner') {
                    sh 'cd spring-boot-app/ && mvn sonar:sonar -Dsonar.projectKey=kubernetics -Dsonar.projectName="kubernetics"'
                }
            }
        }
        
        stage('build docker image') {
            steps {
                withDockerRegistry(credentialsId: 'docker', url: 'https://index.docker.io/v1/') {
                sh'''
                cd spring-boot-app/ && docker build -t kubernetes:1.0 .
                docker tag kubernetes:1.0 saeedhmohd244/kubernetes:1.0
                docker push saeedhmohd244/kubernetes:1.0
                '''
                }
            }
        }
    }
}
